<?php
namespace clear\Responder;
use clear\Router;
use clear\Route;
use clear\Env;
use clear\Render\Text;

require_once __DIR__ . "/../../BaseCase.php";

/**
 * Test class for Route.
 * Generated by PHPUnit on 2011-12-13 at 08:29:38.
 */
class CliResponderTest extends \BaseCase {
	
    function testInstantiateNoErrors()
    {
        new CliResponder(
            new Router(
                new Route('get', '/')
            ),
            new Text(),
            new Env()
        );
        // just a sanity test
        $this->assertTrue(true);
    }
    
    function testComplete()
    {
        $responder = new CliResponder(
            new Router(
                new Route('get', '/')
            ),
            new Text(),
            new Env()
        );
        $responder->complete();
        // just sanity check
        $this->assertTrue(true);
    }
    
    function testErrorResponseEchosErrorMessage()
    {
        $responder = new CliResponder(
            new Router(
                new Route('get', '/')
            ),
            new Text(),
            new Env()
        );
        ob_start();
        $responder->error_response(404, "Not Found Test");
        $echoed_response = ob_get_clean();
        // just sanity check
        $this->assertEquals("Not Found Test", $echoed_response);
    }
    function testErrorResponseRecordsHeaders()
    {
        $renderer = new Text();
        $responder = new CliResponder(
            new Router(
                new Route('get', '/')
            ),
            $renderer,
            new Env()
        );
        ob_start();
        $responder->error_response(404, "Not Found Test");
        $echoed_response = ob_get_clean();
        // just sanity check
        $this->assertArrayHasKey(404, $renderer->response_headers());
        $response_headers = $renderer->response_headers();
        $this->assertEquals(1, count($response_headers[404]), 
            "There should be only 1 404 response header recorded on the Render");
        $this->assertEquals(404, $response_headers[404][0]['response_code']);
        $this->assertEquals("HTTP/1.1 404 Not Found", $response_headers[404][0]['header_text']);
        $this->assertEquals("Not Found Test", $response_headers[404][0]['response_message']);
    }
    
}
